[tool.pytest.ini_options]
addopts = "-q -p no:warnings"
testpaths = ["tests"]
filterwarnings = [
  # Silence pandas-on-Spark advice warnings that are noisy in tests
  "ignore::pyspark.pandas.utils.PandasAPIOnSparkAdviceWarning",
  # Silence known deprecations triggered inside PySpark typing hints
  "ignore:distutils Version classes are deprecated:DeprecationWarning:pyspark.pandas.typedef.typehints",
  "ignore:Converting `np.character` to a dtype is deprecated:DeprecationWarning:pyspark.pandas.typedef.typehints",
  # Silence PyArrow timezone env warning emitted on pandas-on-Spark import
  "ignore::UserWarning:pyspark.pandas",
  # Silence distutils Version deprecation inside pyspark.sql pandas utils
  "ignore:distutils Version classes are deprecated:DeprecationWarning:pyspark.sql.pandas.utils",
]
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "unipandas"
version = "0.0.1"
description = "Unified pandas-like API with pluggable backends: pandas, Dask, pandas-on-Spark"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
  { name = "Your Name", email = "you@example.com" },
]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = []

[project.optional-dependencies]
pandas = ["pandas>=1.5"]
dask = ["dask[dataframe]>=2024.1.0"]
pyspark = ["pyspark>=3.2"]
mdreport = [
  "tabulate>=0.9.0",
  "psutil>=5.9.0",
]
narwhals = ["narwhals>=1.0.0"]

[project.urls]
homepage = "https://example.com/unipandas"
repository = "https://example.com/unipandas.git"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]


